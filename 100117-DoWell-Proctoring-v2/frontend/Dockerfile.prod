# Build stage: This stage is used for building the frontend application using Node.js

# Using Node.js version 20 based on Alpine for a lightweight image
FROM node:20-alpine AS dist

# Set the working directory inside the container
WORKDIR /usr/src/frontend

# Copy package.json and package-lock.json to the working directory
COPY package*.json ./

# Install dependencies, including handling legacy peer dependencies
RUN npm install --legacy-peer-deps

# Copy the rest of the frontend application source code to the working directory
COPY . .

# Build the frontend application
RUN npm run build


# Serve stage: This stage sets up the environment to serve the built frontend application

# Start a new stage from Node.js version 20 based on Alpine to keep the image lightweight
FROM node:20-alpine  

# Set the working directory where the application will be served
WORKDIR /app

# Globally install serve, a static file serving and directory listing module
RUN npm install -g serve

# Copy the built application from the build stage to the serve directory
COPY --from=dist /usr/src/frontend/dist /app 

# Expose port 4173 on which the application will run
EXPOSE 4173  

# Command to serve the application on the specified port
CMD ["serve", "-s", ".", "-l", "4173"]